# NOTE:
#	This is just a sourced bash script, so think what you put here.
#	If you'd like to use $ sign, you must enclose string in '' or escape it.
#	If you'd like to use some other variable, feel free to use it.
#	In booleans 1, 'y', 't', 'yes', 'true' and 'on' evaluate as true.

# Base path for all uam-created mountpoints.

MOUNTPOINT_BASE='/media'

# GID and umask of mounted filesystems like VFAT or NTFS.
# Is used directly in MOUNT_OPTS configvar.

MOUNT_GROUP='plugdev'
MOUNT_UMASK=07

# Options to pass to mount (default -- will be used if no specific defined).

MOUNT_OPTS='noatime'

# Options to pass to mount with a specific filesystem. For known ids, see udev's
# ${ID_FS_TYPE}. The suffixes MUST be uppercase (unless you have bash with
# case-insensitive variable names).

MOUNT_OPTS_VFAT="umask=${MOUNT_UMASK},gid=${MOUNT_GROUP},${MOUNT_OPTS}"
MOUNT_OPTS_NTFS="${MOUNT_OPTS_VFAT}"

# You may also use MOUNT_OPTS_* to use ntfs-3g, e.g.:

# MOUNT_OPTS_NTFS="${MOUNTS_OPTS_VFAT} -t ntfs-3g"
# MOUNT_OPTS_NTFS="${MOUNTS_OPTS_VFAT},force -t ntfs-3g"

# Whether to try to remount fs R/O if umount fails.

UMOUNT_TRY_RO=1

# Whether to engage an lazy-umount if umount fails.

UMOUNT_TRY_LAZY=1

# WHether to remove created mountpoints after umount or mount failure.

REMOVE_MOUNTPOINTS=1

# Array of possible mountpoint name templates to use (uam will use first free).
# Can contain pathnames relative to ${MOUNTPOINT_BASE}. If you'd like to use
# absolute pathnames here, just set MOUNTPOINT_BASE=''.
#
# The templates will be eval-ed, so you have to put variable names escaped here.
# You can use any environment variable provided by udev (see: /lib/udev/vol_id
# /dev/something), including:
#	${ID_FS_TYPE}		for fs type (ext2, swap, vfat, etc.)
#	${ID_FS_UUID_ENC}	for fs UUID (unique identifier)
#	${ID_FS_LABEL_ENC}	for fs label (user-specified)
# Below will work only under real udev, not when launched manually:
#	${ID_SERIAL}		for full serial of device (incl. vendor, model and inst)
#	${ID_SERIAL_SHORT}	for actual serial of device
# You can also use
#	${DEVBASENAME}		to get basename of the device (i.e. sda1)
#	${PARTN}			partition number (i.e. 1)
#	${SERIAL}			like ${ID_SERIAL}, but without the instance

MOUNTPOINT_TEMPLATES=(
	'${ID_FS_LABEL_ENC}'								# label
	'${ID_FS_LABEL_ENC+${SERIAL}-${ID_FS_LABEL_ENC}}'	# serial-label (if -n label)
	'${SERIAL}-${PARTN}'								# serial-partition number
	'${DEVBASENAME}'									# sdXY
)

# vim:syntax=sh:ts=4
